//grid variables
$grid-cols: 12;//number of columns in the grid
$base-col-width: 100% / $grid-cols;//width of one column
$sm-breakpoint: 42rem;//devices smaller than 42rem are taken to be small
$md-breakpoint: 64rem;//devices smaller than 64rem but greater than 42rem are taken to be medium
$max-width: 70rem;//maximum width of grid
$gutter-width: 1rem;//space between columns
//grid variables end here

//resets
*,
*:before,
*:after {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}
//resets end here


//grid mixin
@mixin grid($size){

	@for $i from 1 through $grid-cols{
    	.#{$size}-#{$i}{
    		float: left;
    		width: #{$base-col-width * $i};
    	}
	}
	@for $i from 1 through $grid-cols{
		.#{$size}-offset-#{$i}{
			float: left;
			margin-left: #{$base-col-width * $i};
		}
	}
}
//grid mixin ends here


.container {
	max-width: $max-width;
	margin-left: auto;
	margin-right: auto;
	display: block;
}
.row {
	.row {
		margin-left: -$gutter-width;
		margin-right: -$gutter-width;
	}
	&::before, &::after {
		content: ' ';
		display: table;
		clear: both;
	}
}

[class*='col-'] {
  min-height: 1px;
  width: 100%;
  padding-left: $gutter-width;
  padding-right: $gutter-width;
  display: block;
  position: relative;
  float: left;
}

.container-fluid {
	width: 100%;
	margin-left: auto;
	margin-right: auto;
	display: block;
}

.row-no-gutter {
  .row {
    margin-left: 0;
    margin-right: 0;
  }
	[class*='col-'] {
		padding-left: 0;
		padding-right: 0;
	}
}


@include grid('col-sm');

@media screen and (min-width: $sm-breakpoint) {
	@include grid('col-md');
}

@media screen and (min-width: $md-breakpoint) {
	@include grid('col-lg');
}
